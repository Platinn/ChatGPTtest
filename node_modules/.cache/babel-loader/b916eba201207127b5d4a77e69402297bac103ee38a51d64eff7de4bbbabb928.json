{"ast":null,"code":"import axios from 'axios';\nconst OPENAI_API_KEY = process.env.REACT_APP_OPENAI_API_KEY;\nconst API_URL = 'https://api.openai.com/v1/chat/completions';\nconst userToken = sessionStorage.getItem('userToken');\nconst headers = {\n  'Content-Type': 'application/json',\n  'Authorization': `Bearer ${userToken}`\n};\nexport const sendMessage = async message => {\n  const data = {\n    model: 'gpt-3.5-turbo-0301',\n    messages: [{\n      role: 'system',\n      content: 'You are a helpful assistant.'\n    }, {\n      role: 'user',\n      content: message\n    }],\n    max_tokens: 100,\n    n: 1,\n    temperature: 0.8\n  };\n  try {\n    const response = await axios.post(API_URL, data, {\n      headers\n    });\n    return response.data.choices[0].message.content.trim();\n  } catch (error) {\n    console.error('Error:', error);\n  }\n};","map":{"version":3,"names":["axios","OPENAI_API_KEY","process","env","REACT_APP_OPENAI_API_KEY","API_URL","userToken","sessionStorage","getItem","headers","sendMessage","message","data","model","messages","role","content","max_tokens","n","temperature","response","post","choices","trim","error","console"],"sources":["/Users/plbiojout/Documents/code/naiad-gpt/chatgpttest2.1/src/ChatGPTAPI.js"],"sourcesContent":["import axios from 'axios';\n\nconst OPENAI_API_KEY = process.env.REACT_APP_OPENAI_API_KEY;\nconst API_URL = 'https://api.openai.com/v1/chat/completions';\n\nconst userToken = sessionStorage.getItem('userToken');\n\n\nconst headers = {\n  'Content-Type': 'application/json',\n  'Authorization': `Bearer ${userToken}`,\n};\n\nexport const sendMessage = async (message) => {\n  const data = {\n    model: 'gpt-3.5-turbo-0301',\n    messages: [\n      {\n        role: 'system',\n        content: 'You are a helpful assistant.',\n      },\n      {\n        role: 'user',\n        content: message,\n      },\n    ],\n    max_tokens: 100,\n    n: 1,\n    temperature: 0.8,\n  };\n\n  try {\n    const response = await axios.post(API_URL, data, { headers });\n    return response.data.choices[0].message.content.trim();\n  } catch (error) {\n    console.error('Error:', error);\n  }\n};\n\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,cAAc,GAAGC,OAAO,CAACC,GAAG,CAACC,wBAAwB;AAC3D,MAAMC,OAAO,GAAG,4CAA4C;AAE5D,MAAMC,SAAS,GAAGC,cAAc,CAACC,OAAO,CAAC,WAAW,CAAC;AAGrD,MAAMC,OAAO,GAAG;EACd,cAAc,EAAE,kBAAkB;EAClC,eAAe,EAAG,UAASH,SAAU;AACvC,CAAC;AAED,OAAO,MAAMI,WAAW,GAAG,MAAOC,OAAO,IAAK;EAC5C,MAAMC,IAAI,GAAG;IACXC,KAAK,EAAE,oBAAoB;IAC3BC,QAAQ,EAAE,CACR;MACEC,IAAI,EAAE,QAAQ;MACdC,OAAO,EAAE;IACX,CAAC,EACD;MACED,IAAI,EAAE,MAAM;MACZC,OAAO,EAAEL;IACX,CAAC,CACF;IACDM,UAAU,EAAE,GAAG;IACfC,CAAC,EAAE,CAAC;IACJC,WAAW,EAAE;EACf,CAAC;EAED,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMpB,KAAK,CAACqB,IAAI,CAAChB,OAAO,EAAEO,IAAI,EAAE;MAAEH;IAAQ,CAAC,CAAC;IAC7D,OAAOW,QAAQ,CAACR,IAAI,CAACU,OAAO,CAAC,CAAC,CAAC,CAACX,OAAO,CAACK,OAAO,CAACO,IAAI,EAAE;EACxD,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;EAChC;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}